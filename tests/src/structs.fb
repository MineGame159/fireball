namespace Tests.Structs;

struct Vec2 {
    static number i32,

    x i32,
    y i32,
}

impl Vec2 {
    static func something() i32 {
        return 13;
    }

    func setX(x i32) {
        this.x = x;
    }
}

#[Test]
func initializer() bool {
    var a = Vec2 { x: 2, y: 3 };

    return a.x == 2 && a.y == 3;
}

#[Test]
func assign() bool {
    var a Vec2;
    a.x = 9;

    return a.x == 9;
}

#[Test]
func pointer() bool {
    var a Vec2;

    var ptr = &a.y;
    *ptr = 4;

    return a.y == 4;
}

#[Test("sizeof")]
func _sizeof() bool {
    return sizeof(Vec2) == 8;
} 

#[Test("alignof")]
func _alignof() bool {
    return alignof(Vec2) == 4;
}

#[Test]
func staticField() bool {
    Vec2.number = 8;

    return Vec2.number == 8;
}

#[Test]
func staticFieldPointer() bool {
    var ptr = &Vec2.number;
    *ptr = 7;

    return Vec2.number == 7;
}

#[Test]
func method() bool {
    var a Vec2;
    a.setX(1);

    return a.x == 1;
}

#[Test]
func staticMethod() bool {
    return Vec2.something() == 13;
}
