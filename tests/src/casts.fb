namespace Tests.Casts;

enum Animal {
    Dog,
    Cat = 9,
}

#[Test]
func primitive2primitive_extend() bool {
    var a = 5 as i32;
    return (a as i64) == (5 as i64);
}

#[Test]
func primitive2primitive_truncate() bool {
    var a = 5 as i32;
    return (a as i16) == (5 as i16);
}

#[Test]
func primitive2primitive_none() bool {
    var a = 5 as i32;
    return (a as u32) == (5 as u32);
}

#[Test]
func primitive2primitive_float2double() bool {
    return (5f as f64) == 5.0;
}

#[Test]
func primitive2primitive_double2float() bool {
    return (5.0 as f32) == 5f;
}

#[Test]
func primitive2primitive_int2float() bool {
    return (5 as f32) == 5f;
}

#[Test]
func primitive2primitive_float2int() bool {
    return (5f as i32) == 5;
}

#[Test]
func primitive2enum() bool {
    var a = 9;
    return (a as Animal) == Animal.Cat;
}

#[Test]
func pointer2pointer() bool {
    var a *i32;
    var _b = a as *f64;

    return true;
}

#[Test]
func pointer2func() bool {
    var a *i32;
    var _b = a as fn () void;

    return true;
}

#[Test]
func enum2primitive() bool {
    var a = Animal.Cat;
    return (a as i32) == 9;
}
