namespace Tests.Interfaces;

interface Something {
    func getNumber() i32
}

struct Foo {}

impl Foo : Something {
    func getNumber() i32 {
        return 5;
    }
}

struct Bar {
    number i32,
}

impl Bar : Something {
    func getNumber() i32 {
        return this.number;
    }
}

#[Test]
func simple() bool {
    var f = Foo {};
    return check(&f, 5);
}

#[Test]
func this() bool {
    var b = Bar { number: 9 };
    return check(&b, 9);
}

#[Test]
func cast() bool {
    var f = Foo {};
    var s = &f as Something;

    return typeof(s) == typeof(Something);
}

#[Test]
func implicitCast() bool {
    var f = Foo {};
    var s Something = &f;

    return typeof(s) == typeof(Something);
}

#[Test]
func nilCheck() bool {
    var s Something;

    return s == nil;
}

#[Test]
func notNilCheck() bool {
    var f = Foo {};
    var s Something = &f;

    return s != nil;
}

#[Test]
func checkConcrete() bool {
    var f = Foo {};
    var s Something = &f;

    return s == &f && s != &s;
}

func check(s Something, number i32) bool {
    return s.getNumber() == number;
}
